#!/bin/sh

# surplus on wheels (s+ow): a pure shell script to run surplus with mdtest using the termux-api

FALLBACK_LOCATION="%d\nSingapore?"

JID_NOMINAL_TARGET="$JID_NOMINAL_TARGET"
JID_ERRORED_TARGET="$JID_ERRORED_TARGET"

MDTEST_BIN="$HOME/.local/bin/mdtest"
MDTEST_DIR="$HOME/.local/share/mdtest"

SPOW_CACHE_DIR="$HOME/.cache/s+ow"

# per-tool session logs
SPOW_LOCTN_OUT="$SPOW_CACHE_DIR/location.json"
SPOW_SPLUS_OUT="$SPOW_CACHE_DIR/surplus.out.log"
SPOW_SPLUS_ERR="$SPOW_CACHE_DIR/surplus.err.log"

# per-session collated logs
SPOW_SESH_OUT="$SPOW_CACHE_DIR/out.log"
SPOW_SESH_ERR="$SPOW_CACHE_DIR/err.log"

# per-week collated logs
SPOW_WEEK_PRE="$SPOW_CACHE_DIR/$(date +%Y)W$(date +"%V")"
SPOW_WEEK_OUT="$SPOW_WEEK_PRE.out.log"
SPOW_WEEK_ERR="$SPOW_WEEK_PRE.err.log"

# last successful surplus output
SPOW_LAST_OUT="$SPOW_CACHE_DIR/last"

# ensure commands
if ! command -v termux-location >/dev/null 2>&1; then
	printf "s+ow: error: termux-location is not installed.\ninstall it with 'pkg install termux-api' and with installing the termux:api app from the play store or f-droid.\n"
	exit 1
fi

if ! command -v surplus >/dev/null 2>&1; then
	printf "s+ow: error: surplus is not installed.\ninstall it with 'pip install https://github.com/markjoshwel/surplus/releases/latest/download/surplus-latest-py3-none-any.whl'\n"
	exit 1
fi

if ! command -v ~/.local/bin/mdtest >/dev/null 2>&1; then
	printf "s+ow: error: mdtest is not installed.\ninstall it by getting a release or building it from source from https://github.com/markjoshwel/whatsmeow-termux\n"
	exit 1
fi

# ensure JID targets are set
if [ -z "$JID_NOMINAL_TARGET" ] || [ -z "$JID_ERRORED_TARGET" ]; then
	echo "s+ow: error: JID targets are not set" >&2
	exit 1
fi

# if [ ! -z "$SPOW_CRON" ]; then
# 	echo "running in cron" >&2
# fi

# ensure directories
mkdir -p "$SPOW_CACHE_DIR" "$MDTEST_DIR"

# create new session logs
rm -f "$SPOW_LOCTN_OUT" "$SPOW_SPLUS_OUT" "$SPOW_SPLUS_ERR" \
	"$SPOW_SESH_OUT" "$SPOW_SESH_ERR"
touch "$SPOW_LOCTN_OUT" "$SPOW_SPLUS_OUT" "$SPOW_SPLUS_ERR" \
	"$SPOW_SESH_OUT" "$SPOW_SESH_ERR" \
	"$SPOW_WEEK_OUT" "$SPOW_WEEK_ERR"

status=0	# 0 is nominal
			# 1 is an termux-location error
			# 2 is a surplus error

# helper functions

locate() {
	termux-location -p "${1:-"gps"}" >"$SPOW_LOCTN_OUT"
	cat "$SPOW_LOCTN_OUT" >>"$SPOW_SESH_OUT"
}

gensharetext() {
	surplus -td "$1" >"$SPOW_SPLUS_OUT" 2>"$SPOW_SPLUS_ERR"
	ret="$?"
	cat "$SPOW_SPLUS_OUT" >>"$SPOW_SESH_OUT"
	cat "$SPOW_SPLUS_ERR" >>"$SPOW_SESH_ERR"
	return "$ret"
}

send() {
	(cd "$MDTEST_DIR" && "$MDTEST_BIN" send "$1" "$2")
}

notify_start() {
	termux-notification \
		--priority "min" \
		--ongoing \
		--id "s+ow" \
		--title "surplus on wheels" \
		--content "s+ow has started running."
}

notify() {
	# $1 is text
	# $2 is attempt number (if any)
	attempt_text="$1"
	if [ $# -eq 2 ]; then
		attempt_text="$1 (attempt $2)"
	fi
	termux-notification \
		--priority "min" \
		--ongoing \
		--id "s+ow" \
		--title "surplus on wheels" \
		--content "$attempt_text"
}

notify_end() {
	# $1 is s+ow status (0, 1, 2)
	# $2 is sent type (0, 1, 2)
	# $3 is sharetext
	termux-notification \
		--priority "min" \
		--id "s+ow" \
		--title "surplus on wheels" \
		--content "$(printf 'Run has finished. (%d, %d)\n\n%s' "$1" "$2" "$3")"
}

# program functions

mdtest() {
	(cd "$MDTEST_DIR" && "$MDTEST_BIN")
}

run() {
	notify_start
	printf "[run! stdout (%s)]\n" "$(date)" >>"$SPOW_SESH_OUT"
	printf "[run! stderr (%s)]\n" "$(date)" >>"$SPOW_SESH_ERR"

	# termux-location
	printf "running termux-location"
	location=""
	for n in 1 2 3 4; do # run four times in case :p
		notify "Running termux-location" "$n"

		if [ "$n" -lt 3 ]; then
			# first 2 times are done with the gps as the location provider
			locate
		else
			# the last 2 are done with the network instead
			locate "network"
		fi

		if [ ! -s "$SPOW_LOCTN_OUT" ]; then
			# erroneous: is empty
			echo "s+ow: error: termux-location response is empty" >>"$SPOW_SESH_ERR"
			status=1
		else
			# nominal: is not empty
			location="$(cat "$SPOW_LOCTN_OUT")"
			status=0
			break
		fi

		printf "."
	done
	if [ "$status" -eq 0 ]; then
		# print missing dots
		s=0
		e=$((4 - n))
		while [ "$s" -lt "$e" ]; do
			printf "."
			s=$((s + 1))
		done

		printf " nominal\n"
		echo "$location" >"$SPOW_LOCTN_OUT"
	else
		printf "errored\n"
	fi

	# surplus
	printf "running surplus... "
	notify "Running surplus -td $location"
	if [ "$status" -eq 0 ]; then
		if gensharetext "$location"; then
			# surplus ran nominally
			cp "$SPOW_SPLUS_OUT" "$SPOW_LAST_OUT"
			status=0
			printf "nominal\n"
		else
			# something happened :^)
			status=2
			printf "errored\n"
		fi
	else
		printf "skipped\n"
	fi

	# mdtest/send message
	printf "sending message(s)... "
	notify "Sending message(s)"
	sent_type=0 # 0 for freshly made sharetext
	# 1 for recycling a last location
	# 2 for using fallback template
	sharetext=""
	if [ "$status" -eq 0 ]; then
		# s+ow has behaved nominally until now, send as per normal
		sharetext="$(cat "$SPOW_SPLUS_OUT")"
		printf "\n"
		send "$JID_NOMINAL_TARGET" "$sharetext"
	else
		# something has gone wrong, send an appropriate fallback
		sharetext=""
		if [ -s "$SPOW_LAST_OUT" ]; then
			# use last successful location
			sharetext="$(cat "$SPOW_LAST_OUT")"
			sent_type=1
			printf "using last...\n"
		else
			# no last location, use fallback
			sharetext="$(printf "$FALLBACK_LOCATION" "$status")"
			sent_type=2
			printf "using fallback... \n"
		fi

		send "$JID_NOMINAL_TARGET" "$sharetext"
		send "$JID_ERRORED_TARGET" "$(cat "$SPOW_SESH_ERR")"
	fi

	done_msg="$(printf "done (%d,%d)\n" "$status" "$sent_type")"
	echo "$done_msg"
	echo "$done_msg" >>"$SPOW_SESH_ERR"

	# cleanup
	printf "%s\n\n" "$(cat "$SPOW_SESH_OUT")" >>"$SPOW_WEEK_OUT"
	printf "%s\n\n" "$(cat "$SPOW_SESH_ERR")" >>"$SPOW_WEEK_ERR"
	notify_end "$status" "$sent_type" "$sharetext"
}

# script entry

if [ "$1" = "mdtest" ]; then
	mdtest
elif [ -z "$1" ]; then
	run
else
	echo "usage: $0 [mdtest]

surplus on wheels: a pure shell script to run surplus with mdtest using the termux-api

choices
   $0 mdtest
      run mdtest for testing or authentication
   $0
      run surplus on wheels normally"
fi
